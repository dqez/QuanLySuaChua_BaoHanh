@model QuanLySuaChua_BaoHanh.ViewModels.ChangePasswordViewModel

@{
    ViewData["Title"] = "Đổi mật khẩu";
}
@{
    var currentArea = ViewContext.RouteData.Values["area"]?.ToString();
    var homeController = "Home";
    var homeAction = "Index";
    
    // Nếu đang ở area Admin, điều hướng về Admin/Home/Index
    // Nếu không có area hoặc area khác, điều hướng về Home/Index
    if (!string.IsNullOrEmpty(currentArea))
    {
        // Giữ nguyên area hiện tại và điều hướng về Home/Index của area đó
    }
    else
    {
        currentArea = ""; // Về trang chủ chính (không có area)
    }
}
<style>
    .change-password-container {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        min-height: calc(100vh - 140px);
        padding: 2rem 0;
    }
    
    .change-password-card {
        background: var(--white);
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        border: none;
        overflow: hidden;
        transition: all 0.3s ease;
    }
    
    .change-password-content {
        display: flex;
        flex-direction: row;
    }
    
    .change-password-sidebar {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
        width: 300px;
        padding: 2.5rem 1.5rem;
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
    }
    
    .change-password-sidebar::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.08) 0%, transparent 65%);
        transform: rotate(45deg);
        z-index: 0;
    }
    
    .password-avatar {
        width: 100px;
        height: 100px;
        background: rgba(255, 255, 255, 0.25);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
        font-size: 2.5rem;
        position: relative;
        z-index: 1;
        border: 3px solid rgba(255,255,255,0.3);
    }
    
    .password-title {
        font-family: 'Baloo 2', cursive;
        font-weight: 700;
        font-size: 1.8rem;
        margin: 0;
        position: relative;
        z-index: 1;
    }
    
    .password-subtitle {
        opacity: 0.9;
        font-size: 1rem;
        margin: 0.5rem 0 1.5rem;
        position: relative;
        z-index: 1;
    }
    
    .security-tips-sidebar {
        background: rgba(255, 255, 255, 0.15);
        border-radius: 12px;
        padding: 1.5rem;
        width: 100%;
        margin-top: 1rem;
        position: relative;
        z-index: 1;
        text-align: left;
    }
    
    .security-tips-sidebar h6 {
        font-weight: 700;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.1rem;
        color: white;
    }
    
    .security-tips-sidebar ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .security-tips-sidebar li {
        padding: 0.5rem 0;
        display: flex;
        align-items: flex-start;
        gap: 0.5rem;
        font-size: 0.9rem;
        color: rgba(255, 255, 255, 0.9);
    }
    
    .security-tips-sidebar li i {
        margin-top: 0.3rem;
        color: rgba(255, 255, 255, 0.8);
    }
    
    .password-form-body {
        padding: 2.5rem 3rem;
        flex: 1;
    }
    
    .form-group-custom {
        margin-bottom: 2rem;
        position: relative;
    }
    
    .form-label-custom {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.6rem;
        display: block;
        font-size: 0.95rem;
    }
    
    .form-control-custom {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 0.85rem 1.1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
        width: 100%;
        height: calc(2.25rem + 2px + 0.85rem * 2);
    }
    
    .form-control-custom:focus {
        border-color: #c82333;
        box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.2);
        background-color: white;
        outline: none;
    }
    
    .password-toggle {
        position: absolute;
        right: 15px;
        top: calc((2.25rem + 2px + 0.85rem * 2) / 2);
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        padding: 0.5rem;
        z-index: 10;
    }
    
    .password-toggle:hover {
        color: #c82333;
    }
    
    .password-strength {
        height: 10px;
        background-color: #e9ecef;
        border-radius: 5px;
        margin-top: 0.75rem;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .password-strength-bar {
        height: 100%;
        transition: all 0.4s ease;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 600;
        color: white;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
    }
    
    .strength-weak { background: linear-gradient(90deg, #dc3545, #c82333); }
    .strength-fair { background: linear-gradient(90deg, #ffc107, #e0a800); }
    .strength-good { background: linear-gradient(90deg, #17a2b8, #138496); }
    .strength-strong { background: linear-gradient(90deg, #28a745, #20c997); }
    
    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
    
    .form-buttons {
        background-color: #f8f9fa;
        padding: 1.5rem 2rem;
        text-align: right;
        border-top: 1px solid #dee2e6;
    }

    .btn-custom {
        padding: 0.85rem 1.75rem;
        border-radius: 30px;
        font-weight: 600;
        margin: 0 0 0 0.5rem;
        transition: all 0.3s ease;
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.6rem;
        font-size: 1rem;
    }
    
    .btn-danger-custom {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
    }
    
    .btn-danger-custom:hover {
        background: linear-gradient(135deg, #c82333, #a71e2a);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
    }
    
    .btn-secondary-custom {
        background: #6c757d;
        color: white;
    }
    
    .btn-secondary-custom:hover {
        background: #5a6268;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    }
    
    .btn-home-custom {
        background: linear-gradient(135deg, #319BC5, #2a86ab);
        color: white;
    }
    
    .btn-home-custom:hover {
        background: linear-gradient(135deg, #2a86ab, #1f6b8a);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(49, 155, 197, 0.3);
    }
    
    .breadcrumb-custom {
        background: transparent;
        padding: 1rem 0 0 0;
        margin-bottom: 0;
    }
    
    .breadcrumb-custom .breadcrumb-item a {
        color: #319BC5;
        text-decoration: none;
    }
    
    .breadcrumb-custom .breadcrumb-item.active {
        color: #6c757d;
    }

    .container {
        margin-top: 45px
    }
    @@media (max-width: 992px) {
        .change-password-content {
            flex-direction: column;
        }
        
        .change-password-sidebar {
            width: 100%;
            padding: 2rem 1.5rem;
        }
        
        .security-tips-sidebar {
            max-width: 500px;
            margin: 1rem auto 0;
        }
        
        .password-form-body {
            padding: 2rem 1.5rem;
        }
    }
    
    @@media (max-width: 768px) {
        .change-password-container {
            padding: 1.5rem 0.5rem;
        }
        
        .password-form-body {
            padding: 1.5rem 1rem;
        }
        
        .form-buttons {
            padding: 1.5rem 1rem;
            text-align: center;
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .btn-custom {
            width: 100%;
            margin: 0;
            justify-content: center;
        }
        
        .password-title {
            font-size: 1.5rem;
        }
        
        .password-subtitle {
            font-size: 0.9rem;
        }
        
        .password-avatar {
            width: 80px;
            height: 80px;
            font-size: 2rem;
        }
        
        .security-tips-sidebar h6 {
            font-size: 1rem;
        }
        
        .security-tips-sidebar li {
            font-size: 0.85rem;
        }
    }
</style>

<div class="change-password-container">
    <div class="container">
        <!-- Breadcrumb -->
        <!-- <nav aria-label="breadcrumb" class="breadcrumb-custom mb-4">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fas fa-home"></i> Trang chủ</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Profile")">Thông tin cá nhân</a></li>
                <li class="breadcrumb-item active" aria-current="page">Đổi mật khẩu</li>
            </ol>
        </nav> -->
        
        <div class="row justify-content-center">
            <div class="col-lg-10 col-md-12">
                <div class="card change-password-card">
                    <div class="change-password-content">
                        <!-- Left sidebar with security information -->
                        <div class="change-password-sidebar">
                            <div class="password-avatar">
                                <i class="fas fa-key"></i>
                            </div>
                            <h4 class="password-title">@ViewData["Title"]</h4>
                            <p class="password-subtitle">Cập nhật mật khẩu để bảo mật tài khoản</p>
                            
                            <div class="security-tips-sidebar">
                                <h6><i class="fas fa-shield-alt"></i> Lưu ý bảo mật</h6>
                                <ul>
                                    <li><i class="fas fa-check-circle"></i> Mật khẩu nên có ít nhất 8 ký tự</li>
                                    <li><i class="fas fa-check-circle"></i> Kết hợp chữ hoa, chữ thường, số và ký tự đặc biệt</li>
                                    <li><i class="fas fa-check-circle"></i> Không sử dụng thông tin cá nhân dễ đoán</li>
                                    <li><i class="fas fa-check-circle"></i> Không dùng cùng một mật khẩu cho nhiều tài khoản</li>
                                    <li><i class="fas fa-check-circle"></i> Đổi mật khẩu định kỳ để tăng cường bảo mật</li>
                                </ul>
                            </div>
                        </div>
                        
                        <!-- Right side with password form -->
                        <div class="password-form-body">
                            <form id="passwordform" asp-action="ChangePassword" method="post">
                                @Html.AntiForgeryToken()
                                <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                                <div class="form-group-custom">
                                    <label asp-for="CurrentPassword" class="form-label-custom">@Html.DisplayNameFor(model => model.CurrentPassword)</label>
                                    <div class="input-group">
                                        <input asp-for="CurrentPassword" type="password" class="form-control-custom" placeholder="Nhập mật khẩu hiện tại" id="CurrentPassword" />
                                        <button type="button" class="password-toggle" onclick="togglePassword('CurrentPassword')">
                                            <i class="fas fa-eye" id="CurrentPassword-icon"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                                </div>

                                <div class="form-group-custom">
                                    <label asp-for="NewPassword" class="form-label-custom">@Html.DisplayNameFor(model => model.NewPassword)</label>
                                    <div style="position: relative;">
                                        <input asp-for="NewPassword" type="password" class="form-control-custom" placeholder="Nhập mật khẩu mới (ít nhất 6 ký tự)" id="NewPassword" />
                                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('#NewPassword', '#NewPassword-icon-toggle')">
                                            <i class="fas fa-eye" id="NewPassword-icon-toggle"></i>
                                        </button>
                                    </div>
                                    <div class="password-strength" id="password-strength-indicator">
                                        <div class="password-strength-bar" id="password-strength-bar-inner"></div>
                                    </div>
                                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                                    <small class="form-text text-muted">Mật khẩu phải có ít nhất 6 ký tự, nên bao gồm chữ hoa, chữ thường, số và ký tự đặc biệt.</small>
                                </div>

                                <div class="form-group-custom">
                                    <label asp-for="ConfirmPassword" class="form-label-custom">@Html.DisplayNameFor(model => model.ConfirmPassword)</label>
                                    <div style="position: relative;">
                                        <input asp-for="ConfirmPassword" type="password" class="form-control-custom" placeholder="Nhập lại mật khẩu mới" id="ConfirmPassword" />
                                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('#ConfirmPassword', '#ConfirmPassword-icon-toggle')">
                                            <i class="fas fa-eye" id="ConfirmPassword-icon-toggle"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger" id="confirmPasswordValidationMessage"></span>
                                </div>
                            </form>
                        </div>
                    </div>
                    
                    <div class="form-buttons">
                        <button type="submit" form="passwordform" class="btn-custom btn-danger-custom">
                            <i class="fas fa-save"></i>
                            Đổi mật khẩu
                        </button>
                        <a href="@Url.Action("Profile")" class="btn-custom btn-secondary-custom">
                            <i class="fas fa-arrow-left"></i>
                            Quay lại hồ sơ
                        </a>
                        <a asp-area="" asp-controller="Account" asp-action="Login" class="btn-custom btn-home-custom">
                            <i class="fas fa-home"></i>
                            Trang chủ
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        // Toggle password visibility
        function togglePassword(fieldId) {
            const input = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }
        
        $(document).ready(function() {
            // General Show/hide password functionality
            window.togglePasswordVisibility = function(inputId, iconId) {
                const input = $(inputId);
                const icon = $(iconId);

                if (input.attr('type') === 'password') {
                    input.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    input.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            }

            // Password strength indicator
            $('#NewPassword').on('input', function() {
                const password = $(this).val();
                const strengthIndicator = $('#password-strength-indicator'); // Container
                const strengthBar = $('#password-strength-bar-inner'); // Inner bar
                let strength = 0;
                let strengthText = '';
                let strengthClass = '';

                if (password.length === 0) {
                    strengthIndicator.hide(); // Hide if no password
                    return;
                }
                strengthIndicator.show(); // Show if password has input

                // Password strength criteria
                if (password.length >= 6) strength++; else strength = 0; // Base: min length
                if (password.length >= 8) strength++; // Longer is better
                if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength++; // Mixed case
                if (password.match(/[0-9]/)) strength++; // Numbers
                if (password.match(/[^a-zA-Z0-9\s]/)) strength++; // Special characters

                switch(strength) {
                    case 0: // Should not happen if length > 0, but as fallback
                    case 1:
                        strengthClass = 'strength-weak';
                        strengthText = 'Yếu';
                        strengthBar.css('width', '25%');
                        break;
                    case 2:
                        strengthClass = 'strength-fair';
                        strengthText = 'Trung bình';
                        strengthBar.css('width', '50%');
                        break;
                    case 3:
                        strengthClass = 'strength-good';
                        strengthText = 'Khá';
                        strengthBar.css('width', '75%');
                        break;
                    case 4:
                    case 5:
                        strengthClass = 'strength-strong';
                        strengthText = 'Mạnh';
                        strengthBar.css('width', '100%');
                        break;
                    default: // Should not happen
                        break;
                }
                
                strengthBar.removeClass('strength-weak strength-fair strength-good strength-strong').addClass(strengthClass);
                strengthBar.text(strengthText);
            });

            // Real-time password confirmation validation
            function validateConfirmPassword() {
                const newPassword = $('#NewPassword').val();
                const confirmPassword = $('#ConfirmPassword').val();
                const messageSpan = $('#confirmPasswordValidationMessage');
                const confirmInput = $('#ConfirmPassword');

                if (confirmPassword.length === 0 && newPassword.length === 0) {
                    messageSpan.text('').removeClass('text-danger text-success');
                    confirmInput.removeClass('is-invalid is-valid');
                    return;
                }

                if (newPassword === confirmPassword) {
                    messageSpan.text('Mật khẩu trùng khớp').removeClass('text-danger').addClass('text-success');
                    confirmInput.removeClass('is-invalid').addClass('is-valid');
                } else {
                    messageSpan.text('Mật khẩu không khớp').removeClass('text-success').addClass('text-danger');
                    confirmInput.removeClass('is-valid').addClass('is-invalid');
                }
            }

            // Attach validation to both password fields
            $('#NewPassword, #ConfirmPassword').on('input', validateConfirmPassword);

            // Initial validation on page load
            validateConfirmPassword();
        });
    </script>
}