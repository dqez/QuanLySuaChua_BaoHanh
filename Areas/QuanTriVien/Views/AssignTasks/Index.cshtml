@model IEnumerable<QuanLySuaChua_BaoHanh.Models.PhieuSuaChua>

@{
    ViewData["Title"] = "Quản lý phân công";
    Layout = "~/Areas/QuanTriVien/Views/Shared/_LayoutAdmin.cshtml";
    var chuaPhanCong = Model.Where(x => string.IsNullOrEmpty(x.KyThuatId)).ToList();
    var daPhanCong = Model.Where(x => !string.IsNullOrEmpty(x.KyThuatId)).ToList();
}

<style>
    /* Styles for AssignTasks page */
    :root {
        --blue-primary: #319BC5;
        --white: #FFFFFF;
        --black: #000000;
        --gray-light: #F8F8F8;
        --gray-border: #DDDDDD;
    }
    
    .page-title {
        font-family: 'Baloo 2', cursive;
        font-weight: 700;
        color: var(--blue-primary);
        margin-bottom: 1.5rem;
        font-size: 2rem;
    }
    
    .content-card {
        background-color: var(--white);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        width: 100%;
        overflow-x: auto;
    }
    
    .custom-nav-tabs {
        border-bottom: 2px solid #e9e9e9;
        margin-bottom: 1.5rem;
        display: flex;
        flex-wrap: wrap;
    }
    
    .custom-nav-tabs .nav-item {
        margin-bottom: -2px;
    }
    
    .custom-nav-tabs .nav-item .nav-link {
        border: none;
        color: #6c757d;
        font-family: 'Baloo 2', cursive;
        font-weight: 600;
        font-size: 1rem;
        padding: 0.75rem 1.25rem;
        position: relative;
        transition: all 0.2s;
    }
    
    .custom-nav-tabs .nav-item .nav-link.active {
        color: var(--blue-primary);
        background-color: transparent;
        border: none;
    }
    
    .custom-nav-tabs .nav-item .nav-link.active:after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        right: 0;
        height: 3px;
        background-color: var(--blue-primary);
    }
    
    .custom-nav-tabs .nav-item .nav-link:hover {
        color: var(--blue-primary);
        border: none;
    }
    
    .badge-count {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: var(--blue-primary);
        color: white;
        font-size: 0.75rem;
        margin-left: 0.5rem;
    }
    
    .table {
        width: 100%;
        margin-bottom: 1rem;
        color: #212529;
        border-collapse: collapse;
    }
    
    .table thead th {
        background-color: var(--blue-primary);
        color: white;
        font-weight: 600;
        border: none;
        padding: 0.75rem;
        vertical-align: middle;
    }
    
    .table tbody td {
        padding: 0.75rem;
        vertical-align: middle;
        border-top: 1px solid #dee2e6;
    }
    
    .table tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.02);
    }
    
    .table tbody tr:hover {
        background-color: rgba(49, 155, 197, 0.05);
    }
    
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.375rem 0.75rem;
        font-weight: 500;
        line-height: 1.5;
        text-align: center;
        vertical-align: middle;
        border: 1px solid transparent;
        border-radius: 0.25rem;
        transition: all 0.2s ease-in-out;
    }
    
    .btn-primary {
        color: #fff;
        background-color: var(--blue-primary);
        border-color: var(--blue-primary);
    }
    
    .btn-primary:hover {
        background-color: #2689b0;
        border-color: #2689b0;
    }
    
    .btn-action {
        width: 32px;
        height: 32px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        margin-right: 0.25rem;
    }
    
    .badge {
        display: inline-block;
        padding: 0.25em 0.6em;
        font-size: 75%;
        font-weight: 600;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.375rem;
    }
    
    .badge-primary {
        color: #fff;
        background-color: var(--blue-primary);
    }
    
    .badge-success {
        color: #fff;
        background-color: #28a745;
    }
    
    .badge-warning {
        color: #212529;
        background-color: #ffc107;
    }
    
    .badge-danger {
        color: #fff;
        background-color: #dc3545;
    }
    
    .badge-info {
        color: #fff;
        background-color: #17a2b8;
    }
    
    .search-container {
        display: flex;
        margin-bottom: 1.5rem;
        max-width: 500px;
    }
    
    .search-input {
        flex: 1;
        height: 38px;
        border: 1px solid var(--gray-border);
        border-right: none;
        border-radius: 6px 0 0 6px;
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }
    
    .search-input:focus {
        outline: none;
        border-color: var(--blue-primary);
        box-shadow: 0 0 0 0.2rem rgba(49, 155, 197, 0.25);
    }
    
    .search-button {
        height: 38px;
        background-color: var(--blue-primary);
        color: white;
        border: none;
        border-radius: 0 6px 6px 0;
        padding: 0.375rem 0.75rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    @@media (max-width: 768px) {
        .custom-nav-tabs {
            justify-content: space-between;
        }
        
        .custom-nav-tabs .nav-item .nav-link {
            padding: 0.5rem 0.75rem;
            font-size: 0.875rem;
        }
        
        .search-container {
            max-width: 100%;
        }
        
        .table-responsive {
            overflow-x: auto;
        }
    }

    .custom-nav-tabs .nav-item .nav-link.active:after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 100%;
        height: 3px;
        background-color: var(--blue-primary);
    }

    .custom-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

        .custom-table th {
            background-color: #f8f9fa;
            color: #495057;
            font-weight: 600;
            padding: 12px 15px;
            border-bottom: 2px solid #dee2e6;
        }

        .custom-table td {
            padding: 10px 15px;
            border-bottom: 1px solid #dee2e6;
            vertical-align: middle;
        }

        .custom-table tr:hover {
            background-color: rgba(49, 155, 197, 0.05);
        }

    .btn-detail {
        color: white;
        background-color: var(--blue-primary);
        border-radius: 5px;
        padding: 6px 12px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        font-size: 14px;
        transition: background-color 0.2s;
    }

        .btn-detail:hover {
            background-color: #2580a3;
            color: white;
        }

    .badge-not-assigned {
        background-color: #dc3545;
        color: white;
        border-radius: 4px;
        padding: 5px 10px;
        font-size: 12px;
        font-weight: 500;
    }
</style>

<h1 class="page-title"><i class="bi bi-clipboard-check me-2"></i>Quản lý phân công phiếu sửa chữa</h1>

<div class="content-card">
    <ul class="nav custom-nav-tabs" id="phieuTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="chua-phan-cong-tab" data-bs-toggle="tab" data-bs-target="#chua-phan-cong" type="button" role="tab" aria-controls="chua-phan-cong" aria-selected="true">
                <i class="bi bi-exclamation-circle me-2"></i>Chưa phân công <span class="badge bg-danger ms-2">@chuaPhanCong.Count</span>
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="da-phan-cong-tab" data-bs-toggle="tab" data-bs-target="#da-phan-cong" type="button" role="tab" aria-controls="da-phan-cong" aria-selected="false">
                <i class="bi bi-check-circle me-2"></i>Đã phân công <span class="badge bg-success ms-2">@daPhanCong.Count</span>
            </button>
        </li>
    </ul>
    <div class="tab-content" id="phieuTabsContent">
        <div class="tab-pane fade show active" id="chua-phan-cong" role="tabpanel" aria-labelledby="chua-phan-cong-tab">
            <div class="table-responsive">
                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.First().PhieuSuaChuaId)</th>
                            <th>@Html.DisplayNameFor(model => model.First().MoTaKhachHang)</th>
                            <th>@Html.DisplayNameFor(model => model.First().TrangThai)</th>
                            <th>@Html.DisplayNameFor(model => model.First().NgayGui)</th>
                            <th>@Html.DisplayNameFor(model => model.First().DiaChiNhanTraSanPham)</th>
                            <th>@Html.DisplayNameFor(model => model.First().KhachHang)</th>
                            <th>@Html.DisplayNameFor(model => model.First().KyThuat)</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in chuaPhanCong)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.PhieuSuaChuaId)</td>
                            <td>@Html.DisplayFor(modelItem => item.MoTaKhachHang)</td>
                            <td>
                                @{
                                    var trangThaiEnum = Enum.TryParse<QuanLySuaChua_BaoHanh.Enums.TrangThaiPhieu>(item.TrangThai, out var t) ? t : default;
                                }
                                @trangThaiEnum.GetDisplayName()
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.NgayGui)</td>
                            <td>@Html.DisplayFor(modelItem => item.DiaChiNhanTraSanPham)</td>
                            <td>@Html.DisplayFor(modelItem => item.KhachHang.Id)</td>
                            <td>
                                <span class="badge-not-assigned"><i class="bi bi-exclamation-triangle me-1"></i>Chưa phân công!</span>
                            </td>
                            <td>
                                <a class="btn-detail me-2" style="font-size: 13px;" asp-action="Edit" asp-route-id="@item.PhieuSuaChuaId">
                                    <i class="bi bi-person-check me-1"></i>Phân công
                                </a>
                                <a class="btn-detail" style="font-size: 13px;" asp-action="Details" asp-route-id="@item.PhieuSuaChuaId">
                                        <i class="bi bi-info-circle"></i>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="tab-pane fade" id="da-phan-cong" role="tabpanel" aria-labelledby="da-phan-cong-tab">
            <div class="table-responsive">
                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.First().PhieuSuaChuaId)</th>
                            <th>@Html.DisplayNameFor(model => model.First().MoTaKhachHang)</th>
                            <th>@Html.DisplayNameFor(model => model.First().TrangThai)</th>
                            <th>@Html.DisplayNameFor(model => model.First().NgayGui)</th>
                            <th>@Html.DisplayNameFor(model => model.First().DiaChiNhanTraSanPham)</th>
                            <th>@Html.DisplayNameFor(model => model.First().KhachHang)</th>
                            <th>@Html.DisplayNameFor(model => model.First().KyThuat)</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in daPhanCong)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.PhieuSuaChuaId)</td>
                            <td>@Html.DisplayFor(modelItem => item.MoTaKhachHang)</td>
                            <td>
                                @{
                                    var trangThaiEnum = Enum.TryParse<QuanLySuaChua_BaoHanh.Enums.TrangThaiPhieu>(item.TrangThai, out var t) ? t : default;
                                }
                                @trangThaiEnum.GetDisplayName()
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.NgayGui)</td>
                            <td>@Html.DisplayFor(modelItem => item.DiaChiNhanTraSanPham)</td>
                            <td>@Html.DisplayFor(modelItem => item.KhachHang.Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.KyThuat.Id)</td>
                            <td>
                                <a class="btn-detail me-2" style="font-size: 13px;" asp-action="Edit" asp-route-id="@item.PhieuSuaChuaId">
                                    <i class="bi bi-person-check me-1"></i>Phân công
                                </a>
                                <a class="btn-detail" style="font-size: 13px;" asp-action="Details" asp-route-id="@item.PhieuSuaChuaId">
                                    <i class="bi bi-eye me-1"></i>
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
}